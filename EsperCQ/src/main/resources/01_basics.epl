@Tag(name="EPL", value="DDL")
@EventRepresentation(map) create schema StreamA (x string, y int);

@Tag(name="EPL", value="DDL")
@EventRepresentation(map) create schema StreamB (p string, k int);

@Tag(name="EPL", value="DDL")
create variant schema StreamC as StreamA, StreamB;

@Tag(name="EPL", value="DML")
@name("BasicProjectionA")
insert into StreamC select * from StreamA;

@Tag(name="EPL", value="DML")
@name("BasicProjectionB")
insert into StreamC select * from StreamB;

@Tag(name="EPL", value="DML")
@name("Variant")
select * from StreamC;

@Tag(name="EPL", value="DML")
@name("BasicSelectionA")
select * from StreamA where y > 2;

@Tag(name="EPL", value="DML")
@name("BasicSelectionB")
select * from StreamA(y=4);

@Tag(name="EPL", value="DML")
@name("BasicSelectionB")
select x, count(*) as agg from StreamA;

//How long does the count go?

@Tag(name="EPL", value="DML")
@name("BasicWindowedAggregation")
select x, count(*) as agg from StreamA#time(5);

//How long does the count go?

@Tag(name="EPL", value="DML")
@name("BasicGroupedAggregation")
select x, count(*) as agg
from StreamA#time(5)
group by x;
